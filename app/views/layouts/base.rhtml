<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head>

<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title><%=h html_title %></title>
<meta name="description" content="<%= Redmine::Info.app_name %>" />
<meta name="keywords" content="issue,bug,tracker" />
<%= favicon %>
<%= stylesheet_link_tag 'application', :media => 'all' %>
<%= stylesheet_link_tag 'rtl', :media => 'all' if l(:direction) == 'rtl' %>
<%= javascript_include_tag :defaults %>
<%= heads_for_wiki_formatter %>
<!--[if IE]>
    <style type="text/css">
      * html body{ width: expression( document.documentElement.clientWidth < 900 ? '900px' : '100%' ); }
      body {behavior: url(<%= stylesheet_path "csshover.htc" %>);}
    </style>
<![endif]-->
<%= call_hook :view_layouts_base_html_head %>
<!-- page specific tags -->
<%= yield :header_tags -%>


<% if User.current.logged? %>
<style>
#chatFooter {
 position:fixed;
 text-align:center;
 bottom:0;
 height:15px;
 width:100px;
 right:0;
 valign: center;
 font-weight: bold;
 padding: 5px;
 background-color:#E3E3E4;
 cursor:pointer;
 -moz-border-radius-topleft: 10px 10px;
 border-top-left-radius: 10px 10px;
 color: #333;
}
#chatFooter:hover
{
	background-color: #E9E9E9;
	color: #666;
}
#chatArea
{
        position:fixed;
        text-align:center;
	color: #666666;
        bottom:25px;
        right:0;
        height:440px;
        width:600px;
        background-color: #EFEEF2;//#DEDDDE;
        padding:2px;
	
}
#chatMessages
{
	overflow:auto; 
	height:400px; 
	width:97%; 
	border:thin solid #999999; 
	text-align:left; 
	padding:5px; 
	background:#FEFEFE;
	color: #332233;
}
#chatMessages:hover
{
	background-color:#FBFBFB;
}
.chatMessage
{
	padding: 10px;
	border-top: solid thin #EEEEEE;
	background: #FFF repeat-x bottom url('/plugin_assets/redmine_j_chat/images/purp_gradient.png');
}
.chatMessage:hover
{
	background: #F4F4F7;
}
.chatTime
{
float:right; position: relative;
font-weight = bold;
color: #bcb191; //#ada280;
border-bottom: thin solid #DDDDDD;
cursor: pointer;
}
</style>

<script language="javascript">
var chatVisible= true;
var latestId = 0;

function setCookie(NameOfCookie, value, expiredays) 
{

// Three variables are used to set the new cookie. 
// The name of the cookie, the value to be stored,
// and finally the number of days until the cookie expires.
// The first lines in the function convert 
// the number of days to a valid date.

var ExpireDate = new Date ();
ExpireDate.setTime(ExpireDate.getTime() + (expiredays * 24 * 3600 * 1000));

// The next line stores the cookie, simply by assigning 
// the values to the "document.cookie" object.
// Note the date is converted to Greenwich Mean time using
// the "toGMTstring()" function.

document.cookie = NameOfCookie + "=" + escape(value) + 
((expiredays == null) ? "" : "; expires=" + ExpireDate.toGMTString());
}
function getCookie(NameOfCookie)
{

// First we check to see if there is a cookie stored.
// Otherwise the length of document.cookie would be zero.

if (document.cookie.length > 0) 
{ 

// Second we check to see if the cookie's name is stored in the
// "document.cookie" object for the page.

// Since more than one cookie can be set on a
// single page it is possible that our cookie
// is not present, even though the "document.cookie" object
// is not just an empty text.
// If our cookie name is not present the value -1 is stored
// in the variable called "begin".

begin = document.cookie.indexOf(NameOfCookie+"="); 
if (begin != -1) // Note: != means "is not equal to"
{ 

// Our cookie was set. 
// The value stored in the cookie is returned from the function.

begin += NameOfCookie.length+1; 
end = document.cookie.indexOf(";", begin);
if (end == -1) end = document.cookie.length;
return unescape(document.cookie.substring(begin, end)); } 
}
return null; 

// Our cookie was not set. 
// The value "null" is returned from the function.

}

function expandChat()
{
	setCookie('chatExpanded','0',21,'','','');
        chatVisible = true;
        $("chatArea").hide();
}
function collapseChat()
{
	setCookie('chatExpanded','1',21,'','','');
        chatVisible = false;
        $("chatArea").show();
}
function toggleChat()
{
        if (!chatVisible)  expandChat();
        else   collapseChat();
}

function init()
{
	if (getCookie('chatExpanded') == '1') collapseChat();
	refreshChat();
	$('txtMsg').observe('keypress', function(event){
    	var key = event.which || event.keyCode;
    switch (key) {
        default:
        break;
        case Event.KEY_RETURN:
            submitMsg();
        break;
    }
});

}
function submitMsg()
{
      text=$('txtMsg').value;
      var myAjax = new Ajax.Request(
      '/chat/send_chat',
      {method: 'post', parameters: {msg: text}});
	$('txtMsg').value="";
	new Ajax.Updater('chatMessages', '/chat/receive_chat',
        {
                method: 'get',
                onSuccess: function(){window.setTimeout('refreshScroll()','50');}
        });	
}
var autoScroll=true;
function refreshChat()
{
	new Ajax.PeriodicalUpdater('chatMessages', '/chat/receive_chat',
  	{
   	 	method: 'get',
    		frequency: 5,
    		decay: 1,
		onCreate: function(){if ($('chatMessages').scrollTop == $('chatMessages').scrollHeight) autoScroll=true;},
		onSuccess: function(){if (!autoScroll) window.setTimeout('refreshScroll()','50');}
  	});
}
function refreshScroll()
{
	$('chatMessages').scrollTop = $('chatMessages').scrollHeight;
}
</script>
<% end %>

</head>
<body class="<%= body_css_classes %>">
<div id="wrapper">
<div id="wrapper2">
<div id="top-menu">
    <div id="account">
        <%= render_menu :account_menu -%>
    </div>
    <%= content_tag('div', "#{l(:label_logged_as)} #{link_to_user(User.current, :format => :username)}", :id => 'loggedas') if User.current.logged? %>
    <%= render_menu :top_menu -%>
</div>
      
<div id="header">
    <div id="quick-search">
        <% form_tag({:controller => 'search', :action => 'index', :id => @project}, :method => :get ) do %>
        <%= hidden_field_tag(controller.default_search_scope, 1, :id => nil) if controller.default_search_scope %>
        <%= link_to l(:label_search), {:controller => 'search', :action => 'index', :id => @project}, :accesskey => accesskey(:search) %>:
        <%= text_field_tag 'q', @question, :size => 20, :class => 'small', :accesskey => accesskey(:quick_search) %>
        <% end %>
        <%= render_project_jump_box %>
    </div>
    
    <h1><%= page_header_title %></h1>
    
    <% if display_main_menu?(@project) %>
    <div id="main-menu">
        <%= render_main_menu(@project) %>
    </div>
    <% end %>
</div>

<%= tag('div', {:id => 'main', :class => (has_content?(:sidebar) ? '' : 'nosidebar')}, true) %>
    <div id="sidebar">        
        <%= yield :sidebar %>
        <%= call_hook :view_layouts_base_sidebar %>
    </div>
    
    <div id="content">
				<%= render_flash_messages %>
        <%= yield %>
        <%= call_hook :view_layouts_base_content %>
				<div style="clear:both;"></div>
    </div>
</div>

<div id="ajax-indicator" style="display:none;"><span><%= l(:label_loading) %></span></div>
	
<div id="footer">
  <div class="bgl"><div class="bgr">
    Powered by <%= link_to Redmine::Info.app_name, Redmine::Info.url %> &copy; 2006-2010 Jean-Philippe Lang - Enhanced
  </div></div>
</div>
</div>
</div>

<% if User.current.logged? %>
<%= call_hook :view_layouts_base_body_bottom %>

<%
	numOnline=""	
%>

<div id="chatFooter" onclick="toggleChat();">Chat (<%= numOnline %>) </div>
<div id="chatArea" style="display: none;">
<div id="chatMessages" class="chatMessage" title="0">This is a work in progress <%= User.current.logged? %>, just ignore it for now.</div>
<input type="text" id="txtMsg" style="width:100%; padding:5px; color: #220022;" />
<!--<textarea id="txtMsg" style="width:100%; padding:5px; color: #220022;"></textarea>-->
</div>


<script>init();</script>
<% end %>
</body>
</html>
